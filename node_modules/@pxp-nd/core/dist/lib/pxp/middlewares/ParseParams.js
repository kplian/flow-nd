"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseParams = exports.getListParams = void 0;
const typeorm_1 = require("typeorm");
const getListParams = (params) => {
    const newParams = {};
    Object.keys(params).map((key) => {
        if (key === 'start') {
            newParams.skip = JSON.parse(params[key]);
            // delete params[key];
        }
        else if (key === 'limit') {
            newParams.take = JSON.parse(params[key]);
            // delete params[key];
        }
        else if (key === 'sort') {
            newParams.order = {
                [String(params.sort).replace(/\"/g, '')]: String(params.dir).replace(/\"/g, '').toUpperCase() || 'ASC'
            };
            // delete params[key];
            // delete params['dir'];
        }
        else {
            newParams[key] = params[key];
            // params[key] = JSON.parse(params[key])
        }
        ;
    });
    const res = Object.assign({}, newParams);
    if (params.genericFilterFields) {
        res.where = [];
        const genericFilterFields = params.genericFilterFields;
        const filterFieldsArray = genericFilterFields.split('#');
        filterFieldsArray.forEach((field) => {
            // res.where = {
            //   ...res.where,
            //   [field]:
            //     Like('%' + (params.genericFilterValue as string) + '%')
            // }
            if (res.where) {
                res.where.push({
                    [field]: typeorm_1.ILike('%' + String(params.genericFilterValue) + '%')
                });
            }
        });
        res.filterValue = res['genericFilterValue'];
        // delete res['genericFilterFields'];
        delete res['genericFilterValue'];
    }
    return res;
};
exports.getListParams = getListParams;
const parseParams = (req, res, next) => {
    // default values 
    let defaultValues = {};
    // if(req.method !== 'GET') {
    //   defaultValues = {
    //     isActive: true,
    //     createdBy: req.user.username || ' ',
    //   };
    // }
    // default values
    // const defaultValues = {
    //   // isActive: true,
    //   // createdBy: req.user.username || ' ',
    // };
    req.pxpParams = Object.assign(Object.assign(Object.assign(Object.assign({}, exports.getListParams(req.query)), req.body), req.params), defaultValues);
    req.paramasMerge = Object.assign(Object.assign(Object.assign({}, req.query), req.body), req.params);
    next();
};
exports.parseParams = parseParams;
