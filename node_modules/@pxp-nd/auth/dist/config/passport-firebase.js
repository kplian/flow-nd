"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.configPassportFirebase = exports.verifyCallback = exports.customFirebaseInitialize = void 0;
const passport_1 = __importDefault(require("passport"));
const passportFirebase = __importStar(require("passport-firebase-auth"));
const firebase_admin_1 = __importDefault(require("firebase-admin"));
const customFirebaseInitialize = (credentials, databaseURL = '', name = 'default') => {
    const app = firebase_admin_1.default.initializeApp({
        credential: firebase_admin_1.default.credential.cert(credentials),
        databaseURL,
    }, name);
    return app;
};
exports.customFirebaseInitialize = customFirebaseInitialize;
const verifyCallback = (accessToken, refreshToken, decodedToken, done) => {
    return done(null, { user: 'firebase' });
};
exports.verifyCallback = verifyCallback;
const configPassportFirebase = (firebaseProjectId, authorizationURL, callbackURL) => {
    const strategy = new passportFirebase.Strategy({
        firebaseProjectId,
        authorizationURL,
        callbackURL,
    }, exports.verifyCallback);
    passport_1.default.use(strategy);
};
exports.configPassportFirebase = configPassportFirebase;
