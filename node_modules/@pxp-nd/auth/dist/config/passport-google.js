"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.configGoogleStrategy = void 0;
/**
 * Kplian Ltda 2020
 *
 * MIT
 *
 * Google config
 *
 * @summary Google config
 * @author Israel Colque
 *
 * Created at     : 2020-06-13 18:09:48
 * Last modified  : 2020-09-17 18:46:00
 */
const passport_1 = __importDefault(require("passport"));
const passport_google_oauth_1 = require("passport-google-oauth");
const repositories_1 = require("@pxp-nd/repositories");
const typeorm_1 = require("typeorm");
const googleStrategy = new passport_google_oauth_1.OAuth2Strategy({
    clientID: String(process.env.GOOGLE_CLIENT_ID),
    clientSecret: String(process.env.GOOGLE_SECRET_ID),
    callbackURL: 'http://localhost:3000/auth/google/callback'
}, (accessToken, refreshToken, profile, done) => {
    const UserRepo = typeorm_1.getCustomRepository(repositories_1.UserRepository);
    UserRepo.findOrCreateSocial({
        autentification_id: profile.id,
        autentification_type: 'google'
    }, {
        username: profile.emails ? profile.emails[0].value : profile.id,
        authenticationId: profile.id,
        authenticationType: 'google'
    })
        .then((user) => {
        return done(null, user);
    })
        .catch((err) => {
        done(err);
    });
});
const configGoogleStrategy = () => {
    passport_1.default.use(googleStrategy);
};
exports.configGoogleStrategy = configGoogleStrategy;
