/**
 * `InternalAuthError` error.
 *
 * InternalAuthError wraps errors generated by node-oauth.  By wrapping these
 * objects, error messages can be formatted in a manner that aids in debugging
 * OAuth issues.
 *
 * @constructor
 * @param {String} [message]
 * @param {Object|Error} [err]
 * @api public
 */
function InternalAuthError(message, err) {
    Error.call(this);
    Error.captureStackTrace(this, this.constructor);
    this.name = this.constructor.name;
    this.message = message;
    this.authError = err;
}

/**
 * Inherit from `Error`.
 */
InternalAuthError.prototype.__proto__ = Error.prototype;

/**
 * Returns a string representing the error.
 *
 * @return {String}
 * @api public
 */
InternalAuthError.prototype.toString = function() {
    var m = this.name;
    if (this.message) { m += ': ' + this.message; }
    if (this.authError) {
        if (this.authError instanceof Error) {
            m = this.authError.toString();
        } else if (this.authError.statusCode && this.authError.data) {
            m += ' (status: ' + this.authError.statusCode + ' data: ' + this.authError.data + ')';
        }
    }
    return m;
};


/**
 * Expose `InternalAuthError`.
 */
module.exports = InternalAuthError;
