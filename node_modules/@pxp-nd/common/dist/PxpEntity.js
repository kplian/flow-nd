"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PxpEntity = void 0;
/**
 * Kplian Ltda 2020
 *
 * MIT
 *
 * PxpEntity Class
 *
 * @summary Common fields for all entities
 * @author Jaime Rivera
 *
 * Created at     : 2020-06-13 18:09:48
 * Last modified  : 2020-09-17 19:12:39
 */
const typeorm_1 = require("typeorm");
class PxpEntity extends typeorm_1.BaseEntity {
}
__decorate([
    typeorm_1.Column({
        name: "created_by",
        type: "varchar",
        length: 500,
        default: "admin",
    }),
    __metadata("design:type", String)
], PxpEntity.prototype, "createdBy", void 0);
__decorate([
    typeorm_1.Column({ name: "user_id_ai", nullable: true }),
    __metadata("design:type", Number)
], PxpEntity.prototype, "userIdAi", void 0);
__decorate([
    typeorm_1.Column({ name: "user_ai", type: "varchar", length: 300, nullable: true }),
    __metadata("design:type", String)
], PxpEntity.prototype, "userAi", void 0);
__decorate([
    typeorm_1.Column({ name: "modified_by", nullable: true, type: "varchar", length: 500 }),
    __metadata("design:type", String)
], PxpEntity.prototype, "modifiedBy", void 0);
__decorate([
    typeorm_1.CreateDateColumn({ name: "created_at", nullable: false }),
    __metadata("design:type", Date)
], PxpEntity.prototype, "createdAt", void 0);
__decorate([
    typeorm_1.UpdateDateColumn({ name: "modified_at", nullable: true }),
    __metadata("design:type", Date)
], PxpEntity.prototype, "modifiedAt", void 0);
__decorate([
    typeorm_1.Column({ name: "is_active", default: true }),
    __metadata("design:type", Boolean)
], PxpEntity.prototype, "isActive", void 0);
exports.PxpEntity = PxpEntity;
