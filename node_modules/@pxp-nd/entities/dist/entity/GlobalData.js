"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Kplian Ltda 2020
 *
 * MIT
 *
 * long description for the file
 *
 * @summary short description for the file
 * @author No author
 *
 * Created at     : 2020-09-17 18:55:38
 * Last modified  : 2020-09-18 13:46:27
 */
const typeorm_1 = require("typeorm");
const PxpEntity_1 = require("../PxpEntity");
let GlobalData = class GlobalData extends PxpEntity_1.PxpEntity {
};
__decorate([
    typeorm_1.PrimaryGeneratedColumn({ name: 'global_data_id' }),
    __metadata("design:type", Number)
], GlobalData.prototype, "globalDataId", void 0);
__decorate([
    typeorm_1.Column({ name: 'data', type: 'varchar', length: 100, nullable: false }),
    __metadata("design:type", String)
], GlobalData.prototype, "data", void 0);
__decorate([
    typeorm_1.Column({ name: 'value', type: 'text', nullable: false }),
    __metadata("design:type", String)
], GlobalData.prototype, "value", void 0);
__decorate([
    typeorm_1.Column({ name: 'description', type: 'varchar', length: 500, nullable: false }),
    __metadata("design:type", String)
], GlobalData.prototype, "description", void 0);
GlobalData = __decorate([
    typeorm_1.Entity({ name: 'tpar_global_data' }),
    typeorm_1.Unique(['data'])
], GlobalData);
exports.default = GlobalData;
