"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Kplian Ltda 2020
 *
 * MIT
 *
 * long description for the file
 *
 * @summary short description for the file
 * @author No author
 *
 * Created at     : 2020-09-17 18:55:38
 * Last modified  : 2020-09-30 09:59:20
 */
const typeorm_1 = require("typeorm");
const Person_1 = __importDefault(require("./Person"));
const Role_1 = __importDefault(require("./Role"));
const core_1 = require("@pxp-nd/core");
const PxpEntity_1 = require("../PxpEntity");
let User = class User extends PxpEntity_1.PxpEntity {
    static async getUis(userId) {
        const uiArray = await core_1.__(typeorm_1.getManager()
            .createQueryBuilder(Role_1.default, 'role')
            .innerJoinAndSelect('role.uis', 'ui')
            .innerJoin('role.users', 'user')
            .select(['ui.ui_id'])
            .distinct(true)
            .where('"user".user_id = :userId', { userId })
            .getRawMany());
        const result = uiArray.map((a) => a.ui_id);
        return result;
    }
};
__decorate([
    typeorm_1.PrimaryGeneratedColumn({ name: 'user_id' }),
    __metadata("design:type", Number)
], User.prototype, "userId", void 0);
__decorate([
    typeorm_1.Column({ name: 'username', type: 'varchar', length: 500 }),
    __metadata("design:type", String)
], User.prototype, "username", void 0);
__decorate([
    typeorm_1.Column({ name: 'password', type: 'varchar', length: 200, nullable: true }),
    __metadata("design:type", String)
], User.prototype, "password", void 0);
__decorate([
    typeorm_1.Column({ name: 'style', type: 'varchar', length: 80, nullable: true }),
    __metadata("design:type", String)
], User.prototype, "style", void 0);
__decorate([
    typeorm_1.Column({ name: 'expiration', nullable: true }),
    __metadata("design:type", Date)
], User.prototype, "expiration", void 0);
__decorate([
    typeorm_1.Column({
        name: 'authentication_type',
        type: 'varchar',
        length: 80,
        nullable: false,
        default: 'local'
    }),
    __metadata("design:type", String)
], User.prototype, "authenticationType", void 0);
__decorate([
    typeorm_1.Column({
        name: 'token',
        type: 'varchar',
        length: 80,
        unique: true,
        nullable: true
    }),
    __metadata("design:type", String)
], User.prototype, "authenticationId", void 0);
__decorate([
    typeorm_1.Column({ name: 'hash', type: 'varchar', length: 500 }),
    __metadata("design:type", String)
], User.prototype, "hash", void 0);
__decorate([
    typeorm_1.Column({ name: 'salt', type: 'varchar', length: 500 }),
    __metadata("design:type", String)
], User.prototype, "salt", void 0);
__decorate([
    typeorm_1.OneToOne(() => Person_1.default, {
        eager: true,
        cascade: true
    }),
    typeorm_1.JoinColumn({ name: 'person_id' }),
    __metadata("design:type", Person_1.default)
], User.prototype, "person", void 0);
__decorate([
    typeorm_1.ManyToMany(() => Role_1.default),
    typeorm_1.JoinTable({
        name: 'tsec_user_role',
        joinColumn: {
            name: 'user_id',
            referencedColumnName: 'userId'
        },
        inverseJoinColumn: {
            name: 'role_id',
            referencedColumnName: 'roleId'
        }
    }),
    __metadata("design:type", Array)
], User.prototype, "roles", void 0);
__decorate([
    typeorm_1.Column({ nullable: true, name: 'person_id' }),
    __metadata("design:type", Number)
], User.prototype, "personId", void 0);
__decorate([
    typeorm_1.Column({ nullable: true, name: 'role_id' }),
    __metadata("design:type", Number)
], User.prototype, "roleId", void 0);
User = __decorate([
    typeorm_1.Entity({ name: 'tsec_user' })
], User);
exports.default = User;
