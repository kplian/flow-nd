"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Kplian Ltda 2020
 *
 * MIT
 *
 * long description for the file
 *
 * @summary short description for the file
 * @author No author
 *
 * Created at     : 2020-09-17 18:55:38
 * Last modified  : 2020-09-18 14:19:16
 */
const typeorm_1 = require("typeorm");
const User_1 = __importDefault(require("./User"));
const Subsystem_1 = __importDefault(require("./Subsystem"));
const Ui_1 = __importDefault(require("./Ui"));
const PxpEntity_1 = require("../PxpEntity");
let Role = class Role extends PxpEntity_1.PxpEntity {
};
__decorate([
    typeorm_1.PrimaryGeneratedColumn({ name: 'role_id' }),
    __metadata("design:type", Number)
], Role.prototype, "roleId", void 0);
__decorate([
    typeorm_1.Column({ name: 'role', type: 'varchar', length: 100, nullable: false }),
    __metadata("design:type", String)
], Role.prototype, "role", void 0);
__decorate([
    typeorm_1.Column({ name: 'description', type: 'text', nullable: false }),
    __metadata("design:type", String)
], Role.prototype, "description", void 0);
__decorate([
    typeorm_1.ManyToMany(() => User_1.default),
    typeorm_1.JoinTable({
        name: 'tsec_user_role',
        joinColumn: {
            name: 'role_id',
            referencedColumnName: 'roleId'
        },
        inverseJoinColumn: {
            name: 'user_id',
            referencedColumnName: 'userId'
        }
    }),
    __metadata("design:type", Array)
], Role.prototype, "users", void 0);
__decorate([
    typeorm_1.ManyToOne(() => Subsystem_1.default, subsystem => subsystem.roles),
    typeorm_1.JoinColumn({ name: 'subsystem_id' }),
    __metadata("design:type", Subsystem_1.default)
], Role.prototype, "subsystem", void 0);
__decorate([
    typeorm_1.ManyToMany(() => Ui_1.default),
    typeorm_1.JoinTable({
        name: 'tsec_ui_role',
        joinColumn: {
            name: 'role_id',
            referencedColumnName: 'roleId'
        },
        inverseJoinColumn: {
            name: 'ui_id',
            referencedColumnName: 'uiId'
        }
    }),
    __metadata("design:type", Array)
], Role.prototype, "uis", void 0);
__decorate([
    typeorm_1.Column({ nullable: true, name: 'user_id' }),
    __metadata("design:type", Number)
], Role.prototype, "userId", void 0);
__decorate([
    typeorm_1.Column({ nullable: true, name: 'subsystem_id' }),
    __metadata("design:type", Number)
], Role.prototype, "subsystemId", void 0);
__decorate([
    typeorm_1.Column({ nullable: true, name: 'iu_id' }),
    __metadata("design:type", Number)
], Role.prototype, "uiId", void 0);
Role = __decorate([
    typeorm_1.Entity({ name: 'tsec_role' })
], Role);
exports.default = Role;
