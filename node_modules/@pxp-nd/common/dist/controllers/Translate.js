"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Kplian Ltda 2020
 *
 * MIT
 *
 * User Controller
 *
 * @summary User Controller
 * @author Israel Cm
 *
 * Created at     : 2020-09-17 18:55:38
 * Last modified  : 2020-09-17 19:04:30
 */
const typeorm_1 = require("typeorm");
const core_1 = require("@pxp-nd/core");
const entities_1 = require("../entities");
let Translate = class Translate extends core_1.Controller {
    async findByLang(params, manager) {
        const [data, count] = await manager.findAndCount(entities_1.Translate, {
            where: {
                wordId: params.wordId,
                // languageId: params.languageId,
            },
            relations: ['language']
        });
        return { data, count };
    }
};
__decorate([
    core_1.Get('/word/:wordId'),
    core_1.DbSettings('Orm'),
    core_1.ReadOnly(false),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object, typeorm_1.EntityManager]),
    __metadata("design:returntype", Promise)
], Translate.prototype, "findByLang", null);
Translate = __decorate([
    core_1.Route('/translate/translations'),
    core_1.Model('common/Translate')
], Translate);
exports.default = Translate;
